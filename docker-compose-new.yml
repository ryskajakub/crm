version: '3'

volumes:
  client_build:

services:
  server:
    build: 
      context: .
      dockerfile: Dockerfile_server
    volumes:
      - "./server:/app/server"
      - "./shared:/app/shared"
      - "./client:/app/client"
    command: bash -c "stack install --allow-different-user --flag server:build-run-server --file-watch --exec /root/.local/bin/run-server"
    network_mode: "host"
    depends_on:
      - postgres
    stdin_open: true

  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: haskell
      POSTGRES_USER: haskell
      POSTGRES_DB: crm
    network_mode: "host"

  client: 
    build: 
      context: .
      dockerfile: Dockerfile_client
    volumes:
      - "./shared:/app/shared:ro"
      - "./client/bootstrap:/app/client/bootstrap:ro"
      - "./client/bootstrap-3.2.0-dist:/app/client/bootstrap-dist:ro"
      - "./client/files:/app/client/files:ro"
      - "./client/generated-api:/app/client/generated-api:ro"
      - "./client/images:/app/client/images:ro"
      - "./client/scss:/app/client/scss:ro"
      - "./client/shared:/app/client/shared:ro"
      - "./client/src:/app/client/src:ro"
      - "./client/gulpfile.js:/app/client/gulpfile.js:ro"
      - "./client/package-lock.json:/app/client/package-lock.json:ro"
      - "./client/package.json:/app/client/package.json:ro"
      - "./fay-dom:/app/fay-dom:ro"
      - "./fay-googlemaps:/app/fay-googlemaps:ro"
      - "./fay-jquery:/app/fay-jquery:ro"
      - "./fay-moment:/app/fay-moment:ro"
      - "./fay-react:/app/fay-react:ro"
      - "client_build:/app/client/build"
    command: bash -c 'gulp webpack && gulp watch'
    network_mode: "host"

  nginx:
    image: nginx
    volumes:
      - ./helpers/crm-dev.nginx:/etc/nginx/conf.d/default.conf:ro
      - client_build:/var/www/crm/client/build
    command: [nginx-debug, "-g", "daemon off;"]
    depends_on:
      - server
      - client
      - typescript_server
      - typescript_client
    network_mode: "host"

  adminer:
    image: adminer
    network_mode: "host"

  typescript_server:
    build: 
      context: .
      dockerfile: Dockerfile_typescript
    volumes:
      - "./client/ts/src:/app/src:ro"
      - "./client/ts/package.json:/app/package.json:ro"
      - "./client/ts/yarn.lock:/app/yarn.lock:ro"
    command: bash -c "yarn install --frozen-lockfile && yarn run dev"
    network_mode: "host"
    working_dir: /app

  typescript_client:
    image: node:16
    volumes:
      - "./client/ts/src:/app/src:ro"
      - "./client/ts/package.json:/app/package.json:ro"
      - "./client/ts/yarn.lock:/app/yarn.lock:ro"
      - "./client/ts/public:/app/public:ro"
    command: bash -c "yarn install --frozen-lockfile && yarn run start"
    network_mode: "host"
    working_dir: /app

